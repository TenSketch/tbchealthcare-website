console.log('This site was generated by Hugo.');

// Counter animation function
document.addEventListener('DOMContentLoaded', () => {
    const counters = document.querySelectorAll('.counter');
    let hasAnimated = false;

    const startCounting = () => {
        counters.forEach(counter => {
            const updateCounter = () => {
                const target = +counter.getAttribute('data-target');
                const count = +counter.innerText;

                const increment = target / 200;

                if (count < target) {
                    counter.innerText = Math.ceil(count + increment);
                    setTimeout(updateCounter, 10);
                } else {
                    counter.innerText = target;
                }
            };

            updateCounter();
        });
    };

    // Using IntersectionObserver to detect when the section is in view
    const milestonesSection = document.querySelector('.milestones'); // Correctly target the milestones section

    if (milestonesSection) {  // Check if the section exists before observing
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting && !hasAnimated) {
                    startCounting();
                    hasAnimated = true; // Ensure the counting only happens once
                    observer.unobserve(entry.target); // Optional: Stop observing after animation
                }
            });
        }, {
            threshold: 0.5 // Adjust this value as needed
        });

        observer.observe(milestonesSection); // Observe the section
    } else {
        console.error("Milestones section not found!");
    }
});
